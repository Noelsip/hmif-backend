services:
  mysql:
    image: mysql:8.0
    container_name: hmif-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: hmif_app
      MYSQL_ROOT_HOST: '%'
    ports:
      - "0.0.0.0:3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - hmif-network
    command: --bind-address=0.0.0.0 --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: hmif-redis
    restart: unless-stopped
    ports:
      - "0.0.0.0:6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hmif-network
    command: redis-server --appendonly yes --bind 0.0.0.0
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5
      interval: 10s
      start_period: 30s

  app:
    build: .
    container_name: hmif-app
    restart: unless-stopped
    ports:
      - "0.0.0.0:3000:3000"
    environment:
      - NODE_ENV=development
      - SERVER_HOST=0.0.0.0
      - PRISMA_ENGINES_CHECKSUM_IGNORE_MISSING=1
      - DATABASE_URL=mysql://root:rootpassword@mysql:3306/hmif_app
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-secret-key-here
      - JWT_EXPIRES_IN=1h
      - REFRESH_TOKEN_SECRET=your-refresh-secret-here
      - REFRESH_TOKEN_EXPIRES_IN=7d
      - SESSION_SECRET=your-session-secret-here
    env_file:
      - .env.docker
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hmif-network
    volumes:
      - .:/usr/app
      - node_modules:/usr/app/node_modules
    working_dir: /usr/app
    command: sh -c "
      echo '‚è≥ Waiting for databases to be ready...' &&
      sleep 10 &&
      echo 'üì¶ Installing dependencies...' &&
      npm install && 
      echo 'üîß Generating Prisma client...' &&
      npx prisma generate &&
      echo 'üóÑÔ∏è Running database migrations...' &&
      npx prisma migrate deploy &&
      echo 'üöÄ Starting application...' &&
      npm start
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 60s

networks:
  hmif-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql_data:
  node_modules:
  redis_data: